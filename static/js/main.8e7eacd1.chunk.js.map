{"version":3,"sources":["styles/global.ts","services/api.ts","hooks/auth.tsx","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/styles.ts","components/ToastContainer/index.tsx","hooks/toast.tsx","hooks/index.tsx","routes/Route.tsx","utils/getValidationError.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/ForgotPassword/styles.ts","pages/ForgotPassword/index.tsx","pages/ResetPassword/styles.ts","pages/ResetPassword/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Profile/styles.ts","pages/Profile/index.tsx","routes/index.tsx","App.tsx","index.tsx","assets/logo.svg","assets/sign-in-background.png","assets/sign-up-background.png"],"names":["createGlobalStyle","api","axios","create","baseURL","process","REACT_APP_URL","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","updateUser","Provider","value","useAuth","useContext","toastTypeVariation","info","css","success","error","Container","styled","animated","div","props","type","hasDescription","icons","size","Toast","message","style","removeToast","useToast","useEffect","timer","setTimeout","id","clearTimeout","Number","description","title","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","state","filter","context","Error","AppProvider","Route","isPrivate","Component","component","rest","render","location","to","pathname","getValidationError","err","validationErrors","inner","forEach","path","Tooltip","className","hasError","isFocused","isFilled","Input","name","containerStyle","Icon","icon","useField","fieldName","defaultValue","registerField","setIsFocused","setIsFilled","inputRef","useRef","handleInputFocus","handleInputBlur","current","ref","data-testid","onFocus","onBlur","color","button","shade","Button","loading","Content","appearFromLeft","keyframes","AnimationContainer","Background","SignInBackground","SignIn","formRef","history","useHistory","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","push","errors","getValidationErrors","src","logoImg","alt","onSubmit","FiMail","placeholder","FiLock","appearFromRight","SignUpBackground","SignUp","min","FiUser","ForgotPassword","setLoading","ResetPassword","useLocation","password_confirmation","oneOf","undefined","search","replace","Header","header","HeaderContent","Profile","main","Schedule","NextAppointment","Section","section","Appointment","Calendar","aside","Dashboard","Date","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","monthAvailability","setMonthAvailability","appointments","setAppointments","handleDayChange","day","modifiers","available","disabled","handleMonthChange","month","get","params","year","getFullYear","getMonth","then","getDate","formattedDateAppointments","appointment","formattedHour","format","parseISO","date","disabledDays","useMemo","monthDay","selectedDateAsText","locale","ptBR","selectedWeekDay","morningAppointments","getHours","afternoonAppointments","nextAppointment","find","isAfter","avatar_url","isToday","length","weekdaysShort","fromMonth","daysOfWeek","selectedDays","onDayClick","onMonthChange","months","AvatarInput","old_password","when","is","val","otherwise","formData","put","handleAvatarChange","e","target","files","FormData","append","patch","initialData","htmlFor","onChange","marginTop","Routes","exact","App","basename","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8e7eacd1.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #312e38;\n    color: #fff;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-family: 'Roboto Slab', serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 500;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_URL,\n});\n\nexport default api;\n","import React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar_url: string;\n}\n\ninterface AuthState {\n  token: string;\n  user: User;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n  updateUser(user: User): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`;\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    api.defaults.headers.authorization = `Bearer ${token}`;\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  const updateUser = useCallback(\n    (user: User) => {\n      localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n      setData({\n        token: data.token,\n        user,\n      });\n    },\n    [data.token],\n  );\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, signIn, signOut, updateUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","import styled, { css } from 'styled-components';\nimport { animated } from 'react-spring';\n\ninterface ToastProps {\n  type?: 'success' | 'error' | 'info';\n  hasDescription: number;\n}\n\nconst toastTypeVariation = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `,\n};\n\nexport const Container = styled(animated.div)<ToastProps>`\n  width: 360px;\n\n  position: relative;\n  padding: 16px 30px 16px 16px;\n  border-radius: 10px;\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\n\n  display: flex;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${(props) => toastTypeVariation[props.type || 'info']}\n\n  > svg {\n    margin: 4px 12px 0 0;\n  }\n\n  div {\n    flex: 1;\n\n    p {\n      margin-top: 4px;\n      font-size: 14px;\n      opacity: 0.8;\n      line-height: 20px;\n    }\n  }\n\n  button {\n    position: absolute;\n    right: 16px;\n    top: 19px;\n    opacity: 0.6;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n\n  ${(props) =>\n    !props.hasDescription &&\n    css`\n      align-items: center;\n\n      svg {\n        margin-top: 0;\n      }\n    `}\n`;\n","import React, { useEffect } from 'react';\nimport { FiAlertCircle, FiCheck, FiInfo, FiXCircle } from 'react-icons/fi';\n\nimport { ToastMessage, useToast } from '../../../hooks/toast';\n\nimport { Container } from './styles';\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: object;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheck size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, [removeToast, message.id]);\n\n  return (\n    <Container\n      type={message.type}\n      hasDescription={Number(!!message.description)}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button type=\"button\" onClick={() => removeToast(message.id)}>\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 30px;\n  overflow: hidden;\n`;\n","import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport Toast from './Toast'\n\nimport { ToastMessage } from '../../hooks/toast';\nimport { Container } from './styles';\n\ninterface ToastContainerProps {\n  messages: ToastMessage[];\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    message => message.id,\n    {\n      from: { right: '-120%', opacity: 0 },\n      enter: { right: '0%', opacity: 1 },\n      leave: { right: '-120%', opacity: 0 },\n    }\n  );\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast\n          key={key}\n          style={props}\n          message={item}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(message: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      const id = uuid();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages((state) => [...state, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages((state) => state.filter((message) => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","import React from 'react';\n\nimport { AuthProvider } from './auth';\nimport { ToastProvider } from './toast';\n\nconst AppProvider: React.FC = ({ children }) => {\n  return (\n    <AuthProvider>\n      <ToastProvider>{children}</ToastProvider>\n    </AuthProvider>\n  );\n};\n\nexport default AppProvider;\n","import React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\nimport { useAuth } from '../hooks/auth';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationError(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    visibility: hidden;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n    color: #312e38;\n\n    &::before {\n      content: '';\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0 6px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface TooltipProps {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({\n  title,\n  className = '',\n  children,\n}) => {\n  return (\n    <Container className={className}>\n      {children}\n      <span>{title}</span>\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from 'styled-components';\n\nimport Tooltip from '../Tooltip';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n  hasError: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #232129;\n  border-radius: 10px;\n  padding: 16px;\n  width: 100%;\n\n  border: 2px solid #232129;\n  color: #666360;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${(props) =>\n    props.hasError &&\n    css`\n      border-color: #c53030;\n    `}\n\n  ${(props) =>\n    props.isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `}\n\n  ${(props) =>\n    props.isFilled &&\n    css`\n      color: #ff9000;\n    `}\n\n  input {\n    color: #f4ede8;\n    flex: 1;\n    background: transparent;\n    border: 0;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nexport const Error = styled(Tooltip)`\n  height: 20px;\n  margin-left: 16px;\n\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle?: object;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({\n  name,\n  containerStyle = {},\n  icon: Icon,\n  ...rest\n}) => {\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container\n      style={containerStyle}\n      hasError={!!error}\n      isFilled={isFilled}\n      isFocused={isFocused}\n      data-testid=\"input-container\"\n    >\n      {Icon && <Icon size={20} />}\n      <input\n        name={name}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.button`\n  background: #ff9000;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #312e38;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, '#ff9000')};\n  }\n`;\n","import React, { ButtonHTMLAttributes } from 'react';\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  loading?: boolean;\n};\n\nconst Button: React.FC<ButtonProps> = ({ children, loading, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {loading ? 'Carregando...' : children}\n  </Container>\n);\n\nexport default Button;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport SignInBackground from '../../assets/sign-in-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${SignInBackground}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useRef, useCallback } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationError';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AnimationContainer, Background } from './styles';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        history.push('/dashboard');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro de autenticação',\n          description:\n            'Ocorreu um erro ao fazer login. Verifique as credenciais.',\n        });\n      }\n    },\n    [signIn, addToast, history],\n  );\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu logon</h1>\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n            <Button type=\"submit\">Entrar</Button>\n\n            <Link to=\"/forgot-password\">Esqueci minha senha</Link>\n          </Form>\n\n          <Link to=\"/signup\">\n            <FiLogIn />\n            Criar conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport SignUpBackground from '../../assets/sign-up-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${appearFromRight} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${SignUpBackground}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationError';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AnimationContainer, Background } from './styles';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().min(6, 'No mínimo 6 caracteres'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/users', data);\n\n        history.push('/');\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado!',\n          description: 'Você já pode fazer o seu login no GoBarber!',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description: 'Ocorreu um erro ao fazer cadastro. Tente novamente.',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu cadastro</h1>\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para logon\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport SignInBackground from '../../assets/sign-in-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${SignInBackground}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useRef, useCallback, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationError';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AnimationContainer, Background } from './styles';\nimport api from '../../services/api';\n\ninterface ForgotPasswordFormData {\n  email: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      try {\n        setLoading(true);\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/password/forgot', {\n          email: data.email,\n        });\n        addToast({\n          type: 'success',\n          title: 'E-mail de recuperação enviado',\n          description:\n            'Enviamos um e-mail para confirmar a recuperação de senha. Cheque sua caixa de entrada',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na recuperação de senha',\n          description:\n            'Ocorreu um erro ao tentar recuperar a senha. Tente novamente.',\n        });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [addToast],\n  );\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Recuperar senha</h1>\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Button loading={loading} type=\"submit\">\n              Recuperar\n            </Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiLogIn />\n            Voltar ao login\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport SignInBackground from '../../assets/sign-in-background.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${SignInBackground}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useRef, useCallback } from 'react';\nimport { FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationError';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AnimationContainer, Background } from './styles';\nimport api from '../../services/api';\n\ninterface ResetPasswordFormData {\n  password: string;\n  password_confirmation: string;\n}\n\nconst ResetPassword: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleSubmit = useCallback(\n    async (data: ResetPasswordFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          password: Yup.string().required('Senha obrigatória'),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref('password'), undefined],\n            'as senhas devem ser iguais',\n          ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const { password, password_confirmation } = data;\n        const token = location.search.replace('?token=', '');\n\n        if (!token) {\n          throw new Error();\n        }\n\n        await api.post('/password/reset', {\n          password,\n          password_confirmation,\n          token,\n        });\n\n        history.push('/');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro ao resetar senha',\n          description: 'Ocorreu um erro ao resetar sua senha. Tente novamente.',\n        });\n      }\n    },\n    [addToast, history, location.search],\n  );\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Resetar senha</h1>\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Nova senha\"\n            />\n            <Input\n              name=\"password_confirmation\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Confirmação da senha\"\n            />\n            <Button type=\"submit\">Alterar senha</Button>\n          </Form>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n","import { shade } from 'polished';\nimport styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const Header = styled.header`\n  padding: 32px 0;\n  background: #28262e;\n`;\n\nexport const HeaderContent = styled.div`\n  max-width: 1120px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n\n  > img {\n    height: 80px;\n  }\n\n  button {\n    margin-left: auto;\n    background: transparent;\n    border: 0;\n\n    svg {\n      color: #999591;\n      height: 20px;\n      width: 20px;\n    }\n  }\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 80px;\n\n  img {\n    height: 56px;\n    width: 56px;\n    border-radius: 50%;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 16px;\n    line-height: 24px;\n\n    span {\n      color: #f4ede8;\n    }\n\n    strong {\n      color: #ff9000;\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: #ff9000;\n\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`;\n\nexport const Content = styled.main`\n  max-width: 1120px;\n  margin: 64px auto;\n  display: flex;\n`;\n\nexport const Schedule = styled.div`\n  flex: 1;\n  margin-right: 120px;\n\n  h1 {\n    font-size: 36px;\n  }\n\n  p {\n    margin-top: 8px;\n    color: #ff9000;\n    display: flex;\n    align-items: center;\n    font-weight: 500;\n\n    span {\n      display: flex;\n      align-items: center;\n    }\n\n    span + span::before {\n      content: '';\n      width: 1px;\n      height: 12px;\n      background: #ff9000;\n      margin: 0 8px;\n    }\n  }\n`;\n\nexport const NextAppointment = styled.div`\n  margin-top: 64px;\n\n  > strong {\n    color: #999591;\n    font-size: 20px;\n    font-weight: 400;\n  }\n\n  div {\n    background: #3e3b47;\n    display: flex;\n    align-items: center;\n    padding: 16px 24px;\n    border-radius: 10px;\n    margin-top: 24px;\n    position: relative;\n\n    &::before {\n      position: absolute;\n      width: 1px;\n      height: 80px;\n      left: 0;\n      top: 10%;\n      content: '';\n      background: #ff9000;\n    }\n\n    img {\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n    }\n\n    strong {\n      margin-left: 24px;\n      color: #fff;\n    }\n\n    span {\n      margin-left: auto;\n      display: flex;\n      align-items: center;\n      color: #999591;\n\n      svg {\n        color: #ff9000;\n        margin-right: 8px;\n      }\n    }\n  }\n`;\n\nexport const Section = styled.section`\n  margin-top: 48px;\n\n  > strong {\n    color: #999591;\n    font-size: 20px;\n    line-height: 26px;\n    border-bottom: 1px solid #3e3b47;\n    display: block;\n    padding-bottom: 16px;\n    margin-bottom: 16px;\n  }\n\n  > p {\n    color: #999591;\n  }\n`;\n\nexport const Appointment = styled.div`\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 16px;\n  }\n\n  span {\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n    color: #f4ede8;\n    width: 70px;\n\n    svg {\n      color: #ff9000;\n      margin-right: 8px;\n    }\n  }\n\n  div {\n    flex: 1;\n    background: #3e3b47;\n    display: flex;\n    align-items: center;\n    padding: 16px 24px;\n    border-radius: 10px;\n    margin-left: 24px;\n\n    img {\n      width: 56px;\n      height: 56px;\n      border-radius: 50%;\n    }\n\n    strong {\n      margin-left: 24px;\n      color: #fff;\n      font-size: 20px;\n    }\n  }\n`;\n\nexport const Calendar = styled.aside`\n  width: 380px;\n\n  .DayPicker {\n    background: #28262e;\n    border-radius: 10px;\n  }\n\n  .DayPicker-wrapper {\n    padding-bottom: 0;\n  }\n\n  .DayPicker,\n  .DayPicker-Month {\n    width: 100%;\n  }\n\n  .DayPicker-Month {\n    border-collapse: separate;\n    border-spacing: 8px;\n    margin: 16px;\n  }\n\n  .DayPicker-Day {\n    width: 40px;\n    height: 40px;\n  }\n\n  .DayPicker-Day--available:not(.DayPicker-Day--outside) {\n    background: #3e3b47;\n    border-radius: 10px;\n    color: #fff;\n  }\n\n  .DayPicker:not(.DayPicker--interactionDisabled)\n    .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {\n    background: ${shade(0.2, '#3e3b47')};\n  }\n\n  .DayPicker-Day--today {\n    font-weight: normal;\n  }\n\n  .DayPicker-Day--disabled {\n    color: #666360 !important;\n    background: transparent !important;\n  }\n\n  .DayPicker-Day--selected {\n    background: #ff9000 !important;\n    border-radius: 10px;\n    color: #232129 !important;\n  }\n`;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nimport { FiClock, FiPower } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  Schedule,\n  NextAppointment,\n  Section,\n  Appointment,\n  Calendar,\n} from './styles';\n\nimport logoImg from '../../assets/logo.svg';\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  formattedHour: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const { signOut, user } = useAuth();\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n\n  const handleDayChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then((response) => {\n        setMonthAvailability(response.data);\n      });\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>('/appointments/me', {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then((response) => {\n        const formattedDateAppointments = response.data.map((appointment) => {\n          return {\n            ...appointment,\n            formattedHour: format(parseISO(appointment.date), 'HH:mm'),\n          };\n        });\n        setAppointments(formattedDateAppointments);\n      });\n  }, [selectedDate]);\n\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability\n      .filter((monthDay) => monthDay.available === false)\n      .map((monthDay) => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n\n        return new Date(year, month, monthDay.day);\n      });\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", { locale: ptBR });\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'cccc', { locale: ptBR });\n  }, [selectedDate]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find((appointment) =>\n      isAfter(parseISO(appointment.date), new Date()),\n    );\n  }, [appointments]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logoImg} alt=\"GoBarber\" />\n\n          <Profile>\n            <img src={user.avatar_url} alt={user.name} />\n            <div>\n              <span>Bem vindo,</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </Profile>\n\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n\n      <Content>\n        <Schedule>\n          <h1>Horários agendados</h1>\n          <p>\n            {isToday(selectedDate) && <span>Hoje</span>}\n            <span>{selectedDateAsText}</span>\n            <span>{selectedWeekDay}</span>\n          </p>\n\n          {isToday(selectedDate) && nextAppointment && (\n            <NextAppointment>\n              <strong>Agendamento a seguir</strong>\n              <div>\n                <img\n                  src={nextAppointment.user.avatar_url}\n                  alt={nextAppointment.user.name}\n                />\n                <strong>{nextAppointment.user.name}</strong>\n                <span>\n                  <FiClock />\n                  {nextAppointment.formattedHour}\n                </span>\n              </div>\n            </NextAppointment>\n          )}\n\n          <Section>\n            <strong>Manhã</strong>\n\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {morningAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.formattedHour}\n                </span>\n\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n\n          <Section>\n            <strong>Tarde</strong>\n\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {afternoonAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.formattedHour}\n                </span>\n\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Schedule>\n        <Calendar>\n          <DayPicker\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disabledDays]}\n            modifiers={{ available: { daysOfWeek: [1, 2, 3, 4, 5] } }}\n            selectedDays={selectedDate}\n            onDayClick={handleDayChange}\n            onMonthChange={handleMonthChange}\n            months={[\n              'Janeiro',\n              'Fevereiro',\n              'Março',\n              'Abril',\n              'Maio',\n              'Junho',\n              'Julho',\n              'Agosto',\n              'Setembro',\n              'Outubro',\n              'Novembro',\n              'Dezembro',\n            ]}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  > header {\n    height: 144px;\n    background: #28262e;\n\n    display: flex;\n    align-items: center;\n\n    div {\n      width: 100%;\n      max-width: 1120px;\n      margin: 0 auto;\n\n      svg {\n        color: #999591;\n        width: 24px;\n        height: 24px;\n      }\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  margin-top: -176px;\n\n  width: 100%;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n\n    h1 {\n      margin-bottom: 24px;\n      font-size: 20px;\n      text-align: left;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n`;\n\nexport const AvatarInput = styled.div`\n  margin-bottom: 32px;\n  position: relative;\n  align-self: center;\n\n  img {\n    width: 186px;\n    height: 186px;\n    border-radius: 50%;\n  }\n\n  label {\n    position: absolute;\n    width: 48px;\n    height: 48px;\n    background: #ff9000;\n    border-radius: 50%;\n    right: 0;\n    bottom: 0;\n    transition: background-color 0.2s;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    input {\n      display: none;\n    }\n\n    svg {\n      width: 20px;\n      height: 20px;\n      color: #312e38;\n    }\n\n    &:hover {\n      background: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n","import React, { ChangeEvent, useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiCamera, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationError';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AvatarInput } from './styles';\nimport { useAuth } from '../../hooks/auth';\n\ninterface ProfileFormData {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n}\n\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const { user, updateUser } = useAuth();\n\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          old_password: Yup.string(),\n          password: Yup.string().when('old_password', {\n            is: (val) => !!val.length,\n            then: Yup.string().required('Campo obrigatório'),\n            otherwise: Yup.string(),\n          }),\n          password_confirmation: Yup.string()\n            .when('old_password', {\n              is: (val) => !!val.length,\n              then: Yup.string().required('Campo obrigatório'),\n              otherwise: Yup.string(),\n            })\n            .oneOf(\n              [Yup.ref('password'), undefined],\n              'As senhas devem ser iguais',\n            ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const {\n          name,\n          email,\n          old_password,\n          password,\n          password_confirmation,\n        } = data;\n\n        const formData = {\n          name,\n          email,\n          ...(old_password\n            ? {\n                old_password,\n                password,\n                password_confirmation,\n              }\n            : {}),\n        };\n\n        const response = await api.put('/profile', formData);\n\n        updateUser(response.data);\n\n        history.push('/dashboard');\n\n        addToast({\n          type: 'success',\n          title: 'Perfil atualizado!',\n          description:\n            'Suas informações do perfil foram atualizadas com sucesso!',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na atualização',\n          description: 'Ocorreu um erro ao atualizar perfil. Tente novamente.',\n        });\n      }\n    },\n    [addToast, history, updateUser],\n  );\n\n  const handleAvatarChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files) {\n        const data = new FormData();\n        data.append('avatar', e.target.files[0]);\n\n        api.patch('users/avatar', data).then((response) => {\n          updateUser(response.data);\n          addToast({\n            type: 'success',\n            title: 'Avatar atualizado',\n          });\n        });\n      }\n    },\n    [addToast, updateUser],\n  );\n\n  return (\n    <Container>\n      <header>\n        <div>\n          <Link to=\"/dashboard\">\n            <FiArrowLeft />\n          </Link>\n        </div>\n      </header>\n      <Content>\n        <Form\n          ref={formRef}\n          initialData={{\n            name: user.name,\n            email: user.email,\n          }}\n          onSubmit={handleSubmit}\n        >\n          <AvatarInput>\n            <img src={user.avatar_url} alt={user.name} />\n\n            <label htmlFor=\"avatar\">\n              <FiCamera />\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\n            </label>\n          </AvatarInput>\n\n          <h1>Meu perfil</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            containerStyle={{ marginTop: 24 }}\n            name=\"old_password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha atual\"\n          />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Nova senha\"\n          />\n          <Input\n            name=\"password_confirmation\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Confirmar senha\"\n          />\n          <Button type=\"submit\">Confirmar mudanças</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Route from './Route';\n\nimport SignIn from '../pages/SignIn';\nimport SignUp from '../pages/SignUp';\nimport ForgotPassword from '../pages/ForgotPassword';\nimport ResetPassword from '../pages/ResetPassword';\n\nimport Dashboard from '../pages/Dashboard';\nimport Profile from '../pages/Profile';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={SignIn} />\n    <Route path=\"/signup\" component={SignUp} />\n    <Route path=\"/forgot-password\" component={ForgotPassword} />\n    <Route path=\"/reset-password\" component={ResetPassword} />\n\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n    <Route path=\"/profile\" component={Profile} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\n\nimport AppProvider from './hooks';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <AppProvider>\n        <Routes />\n      </AppProvider>\n\n      <GlobalStyle />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.a49b07ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background.6eac314f.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-up-background.c4d8f988.png\";"],"sourceRoot":""}